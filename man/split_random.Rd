% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split_random.R
\name{split_random}
\alias{split_random}
\title{Add a random split to the data.}
\usage{
split_random(x, nlevels = 2, seed = NA, equal_size = FALSE)
}
\arguments{
\item{x}{A data frame containing the IV and strings, or a LexOPS_pipeline object resulting from one of \code{split_by()}, \code{control_for()}, etc..}

\item{nlevels}{An integer, specifying how many levels this random split should have (default = 2).}

\item{seed}{An integer used to set the seed, to reproduce random splits. If \code{NA}, a random seed will not be set. Default is \code{NA}.}

\item{equal_size}{Logical; should LexOPS create equal (or as close to equal as possible) numbers of candidates for each level? When \code{FALSE}, will sample N levels with replacement, when \code{TRUE} will sample N rows. Setting to \code{TRUE} will generally create more candidate matches. Default is \code{FALSE}.}
}
\value{
Returns \code{df}, with a new column (name defined by \code{cond_col} argument) identifying which level of the randomly generated IV each string belongs to.
}
\description{
Adds a split to the data comparable to that made by \code{split_by()}, but split randomly through the data. All entries in \code{df} are assigned a level randomly.
}
\examples{

# 2 (syllables: few, many) by 2 (random: level 1, level 2) design
lexops |>
  split_by(Syllables.CMU, 1:3 ~ 4:6) |>
  split_random(nlevels = 2) |>
  control_for(Length) |>
  generate(n = 100)

}
